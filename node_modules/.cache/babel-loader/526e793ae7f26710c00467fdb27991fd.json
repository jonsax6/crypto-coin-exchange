{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathancole/Documents/GitHub/coin-exchange/src/components/Coin/Coin.jsx\";\nimport React, { Component } from 'react';\nimport './Coin.css';\nimport PropTypes from 'prop-types';\nexport default class Coin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: this.props.price\n    };\n  }\n\n  componentDidMount() {\n    const callback = () => {\n      // set the state to a new random value\n      const randomPercentage = 0.995 + Math.random() * 0.01;\n      this.setState(function (oldState) {\n        return {\n          price: oldState.price * randomPercentage\n        };\n      });\n    };\n\n    setInterval(callback, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"coin-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", this.state.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/jonathancole/Documents/GitHub/coin-exchange/src/components/Coin/Coin.jsx"],"names":["React","Component","PropTypes","Coin","constructor","props","state","price","componentDidMount","callback","randomPercentage","Math","random","setState","oldState","setInterval","render","name","ticker","propTypes","string","isRequired","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADP,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,MAAM;AACrB;AACA,YAAMC,gBAAgB,GAAG,QAAQC,IAAI,CAACC,MAAL,KAAgB,IAAjD;AAEA,WAAKC,QAAL,CAAe,UAASC,QAAT,EAAmB;AAChC,eAAO;AACLP,UAAAA,KAAK,EAAEO,QAAQ,CAACP,KAAT,GAAiBG;AADnB,SAAP;AAGD,OAJD;AAKD,KATD;;AAUAK,IAAAA,WAAW,CAAEN,QAAF,EAAY,IAAZ,CAAX;AACD;;AAEDO,EAAAA,MAAM,GAAI;AACR,wBACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,8BACE;AAAA,kBAAK,KAAKX,KAAL,CAAWY;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,KAAKZ,KAAL,CAAWa;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,wBAAM,KAAKZ,KAAL,CAAWC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOD;;AA7ByC;AAgC5CJ,IAAI,CAACgB,SAAL,GAAiB;AACfF,EAAAA,IAAI,EAAEf,SAAS,CAACkB,MAAV,CAAiBC,UADR;AAEfH,EAAAA,MAAM,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,UAFV;AAGfd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAHT,CAAjB","sourcesContent":["import React, { Component } from 'react'\nimport './Coin.css'\nimport PropTypes from 'prop-types'\n\nexport default class Coin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: this.props.price\n    }\n  }\n  componentDidMount() {\n    const callback = () => {\n      // set the state to a new random value\n      const randomPercentage = 0.995 + Math.random() * 0.01;\n\n      this.setState( function(oldState) {\n        return {\n          price: oldState.price * randomPercentage\n        };\n      });\n    }\n    setInterval( callback, 1000 );\n  }\n\n  render () {\n    return(\n        <tr className=\"coin-row\">\n          <td>{this.props.name}</td>\n          <td>{this.props.ticker}</td>\n          <td>${this.state.price}</td>\n        </tr>\n    )\n  }\n}\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired\n}"]},"metadata":{},"sourceType":"module"}