{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathancole/Documents/GitHub/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AccountBalance from './components/AccountBalance';\nimport { v4 as uuidv4 } from 'uuid';\nimport CoinList from './components/CoinList';\nimport ExchangeHeader from './components/ExchangeHeader';\nimport styled from 'styled-components';\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n_c = Div;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balance: 10000,\n      coinData: [{\n        name: 'Bitcoin',\n        ticker: 'BTC',\n        price: 35000\n      }, {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        price: 1400\n      }, {\n        name: 'Tether',\n        ticker: 'USDT',\n        price: 1\n      }, {\n        name: 'Ripple',\n        ticker: 'XRP',\n        price: 0.50\n      }, {\n        name: 'Polkadot',\n        ticker: 'DOT',\n        price: 15.95\n      }, {\n        name: 'Cardano',\n        ticker: 'ADA',\n        price: 0.42\n      }, {\n        name: 'Chainlink',\n        ticker: 'LINK',\n        price: 22.38\n      }, {\n        name: 'Uniswap',\n        ticker: 'UNI',\n        price: 19.56\n      }]\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  handleRefresh(valueChangeTicker) {\n    const coinTarget = this.state.coinData.map(({\n      name,\n      ticker,\n      price\n    }) => {\n      let newPrice = price;\n\n      if (valueChangeTicker === ticker) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newPrice = Math.floor(newPrice * randomPercentage * 1000) / 1000;\n        return newPrice;\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(ExchangeHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccountBalance, {\n        ticker: this.state.ticker,\n        amount: this.state.balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CoinList, {\n        coinData: this.state.coinData,\n        handleRefresh: this.handleRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Div\");","map":{"version":3,"sources":["/Users/jonathancole/Documents/GitHub/coin-exchange/src/App.js"],"names":["React","AccountBalance","v4","uuidv4","CoinList","ExchangeHeader","styled","Div","div","App","Component","constructor","props","state","balance","coinData","name","ticker","price","handleRefresh","bind","valueChangeTicker","coinTarget","map","newPrice","randomPercentage","Math","random","floor","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA,CAJA;KAAMD,G;;AAMN,MAAME,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADQ,EAMR;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANQ,EAWR;AACEF,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,MAAM,EAAE,MAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAXQ,EAgBR;AACEF,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAhBQ,EAqBR;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OArBQ,EA0BR;AACEF,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OA1BQ,EA+BR;AACEF,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,MAAM,EAAE,MAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OA/BQ,EAoCR;AACEF,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,MAAM,EAAE,KAFV;AAGEC,QAAAA,KAAK,EAAE;AAHT,OApCQ;AAFC,KAAb;AA6CA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,CAACE,iBAAD,EAAoB;AAC/B,UAAMC,UAAU,GAAG,KAAKT,KAAL,CAAWE,QAAX,CAAoBQ,GAApB,CAAwB,CAAC;AAACP,MAAAA,IAAD;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,KAAD,KAA2B;AACpE,UAAIM,QAAQ,GAAGN,KAAf;;AACA,UAAIG,iBAAiB,KAAKJ,MAA1B,EAAmC;AACjC,cAAMQ,gBAAgB,GAAG,QAAQC,IAAI,CAACC,MAAL,KAAgB,IAAjD;AACAH,QAAAA,QAAQ,GAAGE,IAAI,CAACE,KAAL,CAAYJ,QAAQ,GAAGC,gBAAZ,GAAgC,IAA3C,IAAiD,IAA5D;AACA,eAAOD,QAAP;AACD;;AAAA;AACF,KAPkB,CAAnB;AAQD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,GAAD;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWI,MAAnC;AAA2C,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAA/B;AAAyC,QAAA,aAAa,EAAE,KAAKI;AAA7D;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAtE+B;;AA0ElC,eAAeV,GAAf","sourcesContent":["import React from 'react'\nimport AccountBalance from './components/AccountBalance'\nimport { v4 as uuidv4 } from 'uuid'\nimport CoinList from './components/CoinList';\nimport ExchangeHeader from './components/ExchangeHeader';\nimport styled from 'styled-components'\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balance: 10000,\n      coinData: [\n        {\n          name: 'Bitcoin',\n          ticker: 'BTC',\n          price: 35000\n        },\n        {\n          name: 'Ethereum',\n          ticker: 'ETH',\n          price: 1400\n        },\n        {\n          name: 'Tether',\n          ticker: 'USDT',\n          price: 1\n        },\n        {\n          name: 'Ripple',\n          ticker: 'XRP',\n          price: 0.50\n        },\n        {\n          name: 'Polkadot',\n          ticker: 'DOT',\n          price: 15.95\n        },\n        {\n          name: 'Cardano',\n          ticker: 'ADA',\n          price: 0.42\n        },\n        {\n          name: 'Chainlink',\n          ticker: 'LINK',\n          price: 22.38\n        },\n        {\n          name: 'Uniswap',\n          ticker: 'UNI',\n          price: 19.56\n        }\n      ]\n    }\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  handleRefresh(valueChangeTicker) {\n    const coinTarget = this.state.coinData.map(({name, ticker, price}) => {\n      let newPrice = price;\n      if( valueChangeTicker === ticker ) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newPrice = Math.floor((newPrice * randomPercentage) * 1000)/1000\n        return newPrice;\n      };\n    })\n  }\n\n  render() {\n    return (\n      <Div>\n        <ExchangeHeader />\n        <AccountBalance ticker={this.state.ticker} amount={this.state.balance} />\n        <CoinList coinData={this.state.coinData} handleRefresh={this.handleRefresh}/>\n      </Div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}